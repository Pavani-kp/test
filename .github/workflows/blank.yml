name: Run Tests and Extract Allure Summary (Windows)

on:
  workflow_dispatch:

jobs:
  allure-report:
    runs-on: windows-latest  # Use a Windows runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Python (if using pytest for tests)
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 3: Install dependencies (e.g., pytest, allure-pytest)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest allure-pytest
          pip install -r requirements.txt
      
      - name: Install Scoop
        run: |
         Set-ExecutionPolicy RemoteSigned -scope CurrentUser
         iwr -useb get.scoop.sh | iex
         scoop install allure 
         echo $env:PATH 
         C:\Users\runneradmin\scoop\apps\allure\2.33.0\bin\allure.bat --version
      - name: Run tests with pytest and generate Allure results
        run: |
          pytest --alluredir=allure-results  # Specify the directory where results will be saved
        # Step 6: Generate the Allure report from the results
      - name: Upload Allure Results as artifact
        uses: actions/upload-artifact@v4
        with:
         name: allure-results
         path: allure-results/

      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
         name: allure-results

      - name: Generate Allure Report
        run: |
         C:\Users\runneradmin\scoop\apps\allure\2.33.0\bin\allure.bat generate allure-results --clean -o allure-report  

      - name: Upload Allure Report as artifact
        uses: actions/upload-artifact@v4
        with:
         name: allure-report
         path: allure-report/

      - name: Download Allure Report
        uses: actions/download-artifact@v4
        with:
         name: allure-report

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
         publish_dir: ./allure-report  # Path to the generated Allure report directory
         branch: gh-pages  # The branch where the report will be deployed
      - name: Post summary with build number
        run: |
          $LINK = "https://pavani-kp.github.io/test/"
          echo "Allure Results" >> $env:GITHUB_STEP_SUMMARY
          echo "$LINK" >> $env:GITHUB_STEP_SUMMARY
      - name: Parse Pass Count from Allure Results (JSON)
        run: |
          python -c "
          import json
          import os
          $results_file = os.path.join('allure-results', 'results.json')
          if os.path.exists(results_file):
           with open(results_file) as f:
           results = json.load(f)
        
           pass_count = sum(1 for test in results['tests'] if test['status'] == 'passed')
    
           print(f'Pass count: {pass_count}')
           else:
           print(f'{results_file} does not exist.')
            "
