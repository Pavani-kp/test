name: Capture Timestamp in JSON Example

on:
  workflow_dispatch:
jobs:
  capture_timestamp:
    runs-on: windows-latest  # This uses the Windows runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Generate JSON with timestamp (Windows)
        id: generate_json
        run: |
          # PowerShell script to generate the timestamp in ISO 8601 format (UTC)
          $timestamp = (Get-Date -Format "yyyy-MM-ddTHH:mm:ssZ").ToString()

          # Create the JSON object with the timestamp and other data
          $json_output = @{
            "name" = "John Doe"
            "age" = 30
            "is_admin" = $true
            "timestamp" = $timestamp
          } | ConvertTo-Json

          # Display the generated JSON (for debugging)
          Write-Host "Generated JSON: $json_output"

          # Optionally, save the JSON to a file
          $json_output | Out-File -FilePath generated_output.json

          # Set the JSON as an output variable for later steps
          echo "::set-output name=json_output::$json_output"

      - name: Display the generated JSON
        run: |
          echo "Captured JSON output from the previous step:"
          type generated_output.json

      - name: Process the JSON output (Windows)
        run: |
          # Retrieve the generated JSON output
          $json_output = "${{ steps.generate_json.outputs.json_output }}"

          # Use PowerShell to parse and extract values from the JSON
          $json = $json_output | ConvertFrom-Json
          $name = $json.name
          $age = $json.age
          $is_admin = $json.is_admin
          $timestamp = $json.timestamp

          # Display extracted values
          Write-Host "Name: $name"
          Write-Host "Age: $age"
          Write-Host "Is Admin: $is_admin"
          Write-Host "Timestamp: $timestamp"

      - name: Check if the JSON contains a specific key (Windows)
        run: |
          # Check if the "timestamp" key exists in the JSON
          if ($json.timestamp -ne $null) {
            Write-Host "The timestamp key exists in the JSON."
          } else {
            Write-Host "The timestamp key does not exist."
            exit 1
          }
