name: Run Tests and Extract Allure Summary (Windows)

on:
  workflow_dispatch:

jobs:
  allure-report:
    runs-on: windows-latest  # Use a Windows runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Python (if using pytest for tests)
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 3: Install dependencies (e.g., pytest, allure-pytest)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest allure-pytest
          pip install -r requirements.txt
      
      - name: Install Scoop
        run: |
         Set-ExecutionPolicy RemoteSigned -scope CurrentUser
         iwr -useb get.scoop.sh | iex
         scoop install allure 
         echo $env:PATH 
         C:\Users\runneradmin\scoop\apps\allure\2.33.0\bin\allure.bat --version
      - name: Run tests with pytest and generate Allure results
        run: |
          pytest --alluredir=allure-results  # Specify the directory where results will be saved
         
      # Step 6: Generate the Allure report from the results
      - name: Generate Allure report
        run: |
          C:\Users\runneradmin\scoop\apps\allure\2.33.0\bin\allure.bat generate allure-results --clean --output allure-report

      # Step 7: Extract summary from the Allure report data.json file
      - name: Extract Allure report summary
        run: |
         cat allure-results/*.json | jq '.'
         cat allure-results/*.json | jq 'select(.status == "passed")' | wc -l
         cat allure-results/*.json | jq '.status'
         # Count passed tests
         $passed_count=$(cat allure-results/*.json | jq 'select(.status == "passed")' | wc -l)

         # Count failed tests
         $failed_count=$(cat allure-results/*.json | jq 'select(.status == "failed")' | wc -l)

         # Count skipped tests
         $skipped_count=$(cat allure-results/*.json | jq 'select(.status == "skipped")' | wc -l)

         # Print the results
         echo "Passed tests: $passed_count"
         echo "Failed tests: $failed_count"
         echo "Skipped tests: $skipped_count"

