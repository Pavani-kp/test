name: Run Tests and Extract Allure Summary (Windows)

on:
  workflow_dispatch:

jobs:
  allure-report:
    runs-on: windows-latest  # Use a Windows runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Python (if using pytest for tests)
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 3: Install dependencies (e.g., pytest, allure-pytest)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest allure-pytest
          pip install -r requirements.txt
      
      - name: Install Scoop
        run: |
         Set-ExecutionPolicy RemoteSigned -scope CurrentUser
         iwr -useb get.scoop.sh | iex
         scoop install allure 
         echo $env:PATH 
         C:\Users\runneradmin\scoop\apps\allure\2.33.0\bin\allure.bat --version
      - name: Run tests with pytest and generate Allure results
        run: |
          pytest --alluredir=allure-results  # Specify the directory where results will be saved
        # Step 6: Generate the Allure report from the results
      - name: Generate Allure report
        run: |
          C:\Users\runneradmin\scoop\apps\allure\2.33.0\bin\allure.bat generate allure-results --clean --output allure-report
       # Step 5: Create or checkout gh-pages branch
      - name: Create or Checkout gh-pages branch
        run: |
          git fetch origin gh-pages || echo "No gh-pages branch exists"
          git checkout -b gh-pages || git checkout gh-pages  # Checkout or create gh-pages

      # Step 6: Clean the gh-pages branch and copy the Allure report files
      - name: Clean gh-pages and copy Allure report
        run: |
          git rm -rf .  # Remove existing files in gh-pages branch
          xcopy /E /I /H allure-report\* .  # Copy Allure report files to the root
      - name: Allure Report Action
        uses: mgrybyk-org/allure-report-branch-js-action@v1
        if: always()
        continue-on-error: true
        with:
         report_id: 'allure-reports'
         gh_pages: 'gh-pages'
         report_dir: 'allure-results'
         list_dirs: ${{ github.ref == 'refs/heads/main' }}
         branch_cleanup_enabled: ${{ github.ref == 'refs/heads/main' }}
         max_reports: 20
      # Step 7: Commit and push changes to gh-pages
      - name: Commit and push to gh-pages branch
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Deploy Allure report to gh-pages" || echo "No changes to commit"
          git push origin gh-pages --force
      - name: Print the report URL
        if: always()
        run: |
          echo "The report URL is ${{ steps.allure.outputs.report_url }}"



     
