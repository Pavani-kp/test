name: Run Tests and Extract Allure Summary (Windows)

on:
  workflow_dispatch:

jobs:
  allure-report:
    runs-on: windows-latest  # Use a Windows runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Python (if using pytest for tests)
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 3: Install dependencies (e.g., pytest, allure-pytest)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest allure-pytest
          pip install -r requirements.txt

      - name: Install Scoop
        run: |
         Set-ExecutionPolicy RemoteSigned -scope CurrentUser
         iwr -useb get.scoop.sh | iex
         scoop install allure 
         # Add Allure to the system PATH for the session using a GitHub Actions syntax
         echo "ALLURE_PATH=${PWD}/allure/allure-2.33.0/bin" >> $GITHUB_ENV
         # Print the current PATH to verify if Allure was added correctly
         echo "Current PATH: $env:Path"
         allure --version
     
      # Step 4: Run tests with pytest and generate Allure results
      - name: Run tests with pytest and generate Allure results
        run: |
          pytest --alluredir=allure-results  # Specify the directory where results will be saved
         
      # Step 6: Generate the Allure report from the results
      - name: Generate Allure report
        run: |
          allure generate allure-results --clean --output allure-report

      # Step 7: Extract summary from the Allure report data.json file
      - name: Extract Allure report summary
        run: |
          # Use PowerShell to parse the summary from the data.json file
          $json = Get-Content -Path "allure-report\data.json" | ConvertFrom-Json
          $summary = $json.summary
          Write-Host "Allure Test Summary:"
          Write-Host "Passed: $($summary.passed)"
          Write-Host "Failed: $($summary.failed)"
          Write-Host "Skipped: $($summary.skipped)"
          Write-Host "Total: $($summary.total)"
